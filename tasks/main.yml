---
# docs
# http://docs.ansible.com/ansible/latest/modules/docker_container_module.html

- fail:
    msg: "Define drdc_name"
  when: drdc_name is not defined

- set_fact:
    drdc_pull: "{{not (drdc_dir is defined or drdc_repo is defined)}}"

- name: "Creating directory for sources"
  file:
    path: "{{drdc_dir}}"
    state: directory
    mode: "{{drdc_dir_mode}}"
  when: 'drdc_dir is defined'

- block:
    - tempfile:
        state: directory
        suffix: build
      register: build
    - set_fact: drdc_dir={{build.path}}
  when: 'drdc_repo is defined and drdc_dir is not defined'

- name: Fetching {{drdc_name}} container source from git
  git:
    repo: '{{drdc_repo}}'
    version: HEAD
    force: "{{drdc_force}}"
    accept_hostkey: yes
    dest: '{{drdc_dir}}'
  register: git_result
  when: drdc_repo is defined

- set_fact:
    img_source_path: "{{drdc_dir + drdc_rel_path}}"
  when: drdc_dir is defined

- name: Constructing docker services 
  docker_service:
    build: "{{only_scale|ternary(False ,drdc_force)}}"
    nocache: "{{drdc_nocache}}"
    project_name: "{{drdc_name}}"
    definition: "{{drdc_definition|default(omit)}}"
    recreate: "{{only_scale|ternary('never', drdc_recreate)}}"
    restarted: "{{only_scale|ternary(False, drdc_restart)}}"
    scale: "{{drdc_scale}}"
    timeout: 60
  when: "drdc_mode == 'compose'" # and scale_mode is not defined

# - debug: var=drdc_scale
# - name: Scale docker services
#   docker_service:
#     project_name: "{{drdc_name}}"
#     definition: "{{drdc_definition|default(omit)}}"
#     scale: "{{drdc_scale}}"
#     timeout: 150
#   tags: ['never', 'scale']
#   when: "drdc_mode == 'compose' and scale_mode is defined"

- name: Building {{drdc_name}} image
  docker_image:
    force: '{{drdc_force}}'
    pull: '{{drdc_pull}}'
    nocache: "{{drdc_nocache}}"
    path: '{{img_source_path|default(omit)}}'
    name: '{{drdc_image}}'
  when: "drdc_mode == 'native'"

- name: Creating {{drdc_name}} container
  docker_container:
    name: '{{drdc_name}}'
    hostname: '{{drdc_name}}'
    recreate: "{{drdc_recreate!='never'}}"
    state: started
    pull: '{{drdc_pull}}'
    labels: "{{drdc_labels}}"
    restart: yes
    etc_hosts: "{{drdc_hosts|default(omit)}}"
    restart_policy: '{{drdc_restart_policy}}'
    memory: '{{drdc_memory_limit}}'
    image: '{{drdc_image}}'
    volumes: '{{drdc_volumes}}'
    purge_networks: "{{drdc_purge_networks}}"
    networks: '{{drdc_networks}}'
    ports: '{{drdc_ports}}'
    env: '{{drdc_env}}'
    tty: '{{drdc_tty}}'
    interactive: '{{drdc_interactive}}'
    command: '{{drdc_cmd|default(omit)}}'
  when: "drdc_run_container == True and drdc_mode == 'native'"
